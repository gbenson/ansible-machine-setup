---
- hosts: all
  vars:
    dpkg_architecture: "amd64"  # XXX $(dpkg --print-architecture)
    docker_repo_url: "https://download.docker.com/linux/ubuntu"
    docker_keyring_path: "/etc/apt/trusted.gpg.d/docker-keyring.asc"
    docker_sources_path: "/etc/apt/sources.list.d/docker.list"

  tasks:
    #- debug:
    #    var: ansible_facts

    - name: Install ~/.ssh/authorized_keys
      ansible.posix.authorized_key:
        user: "{{ lookup('env', 'USER') }}"
        state: present
        key: >
          {{ lookup('url',
          'https://github.com/gbenson.keys',
          split_lines=False) }}

    - name: Uninstall problem packages
      become: yes
      ansible.builtin.apt:
        name: docker.io
        state: absent
      when: ansible_facts["distribution"] == "Ubuntu"
      # XXX or "os_family": "Debian",
      # XXX or "pkg_mgr": "apt",

    - name: Add Docker CE APT signing key
      become: yes
      ansible.builtin.get_url:
        url: "{{ docker_repo_url }}/gpg"
        dest: "{{ docker_keyring_path }}"
      when: ansible_facts["distribution"] == "Ubuntu"

    - name: Add Docker CE APT repository
      become: yes
      ansible.builtin.apt_repository:
        repo: >
          deb [arch={{ dpkg_architecture }}
          signed-by={{ docker_keyring_path }}]
          {{ docker_repo_url }}
          {{ ansible_distribution_release }}
          stable
        state: present
        filename: docker
      when: ansible_facts["distribution"] == "Ubuntu"

    - name: Install Docker
      become: yes
      ansible.builtin.apt:
        pkg:
          - docker-ce
          - docker-compose-plugin
      when: ansible_facts["distribution"] == "Ubuntu"

    - name: Add Chrome APT repository
      become: yes
      ansible.builtin.apt_repository:
        repo: >
          deb [arch={{ dpkg_architecture }}]
          https://dl.google.com/linux/chrome/deb/
          stable main
        state: present
        filename: google-chrome
      when: ansible_facts["distribution"] == "Ubuntu"

    - name: Install Chrome
      become: yes
      ansible.builtin.apt:
        name: google-chrome-stable
      when: ansible_facts["distribution"] == "Ubuntu"

    - name: Install packages
      become: yes
      ansible.builtin.apt:
        pkg:
          - curl
          - emacs-gtk
          - git
          - openssh-server
          - nmap
          - python3-dev
          - python3-venv
          - yaml-mode
      when: ansible_facts["os_family"] == "Debian"

    - name: Install Ubuntu-specific packages
      become: yes
      ansible.builtin.apt:
        pkg:
          - apport-retrace
      when: ansible_facts["distribution"] == "Ubuntu"

    - name: Configure git
      ansible.builtin.copy:
        src: dotfiles/gitconfig
        dest: ~/.gitconfig
        mode: "0644"
        backup: yes

    - name: Configure Docker
      become: yes
      ansible.builtin.user:
        name: "{{ lookup('env', 'USER') }}"
        groups: docker
        append: yes

    - name: Configure Emacs
      ansible.builtin.git:
        repo: git@github.com:gbenson/emacs-config.git
        dest: ~/.emacs.config

    - name: Install ~/.emacs
      ansible.builtin.file:
        src: .emacs.config/dot.emacs
        dest: ~/.emacs
        state: link

    - name: Enable core deb-src repos
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list
        regexp: ^# (deb-src .* {{ item }} main restricted)$
        line: \g<1>
        backrefs: yes
      loop:
        - "{{ ansible_distribution_release }}"
        - "{{ ansible_distribution_release }}-updates"
        - "{{ ansible_distribution_release }}-security"
      when: ansible_facts["distribution"] == "Ubuntu"
